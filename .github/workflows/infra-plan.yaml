name: Infra pre-deploy

on:
    push:
        branches:
            - main
            - feature*
    pull_request:

env:
  AWS_REGION: "ap-south-1"
  ENVIRONMENT: "development"

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: read   # This is required for actions/checkout

jobs: 
    terraform-init:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.5
            
            - name: configure aws auth
              uses: aws-actions/configure-aws-credentials@v4.0.3
              with:
                role-to-assume: arn:aws:iam::288761748973:role/github_oidc_role-dev
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_REGION }}

            - name: Initialize Terraform
              env:
                environment: development
              run: |
                cd $GITHUB_WORKSPACE/infrastructure/lambda
                echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                ./ter.sh init ${{env.environment}}
                cd $GITHUB_WORKSPACE/infrastructure/s3
                echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                ./ter.sh init ${{env.environment}}

    terraform-plan:
        needs: terraform-init
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.5
            
            - name: configure aws auth
              uses: aws-actions/configure-aws-credentials@v4.0.3
              with:
                role-to-assume: arn:aws:iam::288761748973:role/github_oidc_role-dev
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_REGION }}

            - name: Initiating terraform plan
              env:
                environment: development
              run: |
                 cd $GITHUB_WORKSPACE/infrastructure/lambda
                 echo -e "\033[0;32mRunning terraform plan in: $(basename $(pwd))\033[0m"
                 ./ter.sh init ${{env.environment}} && ./ter.sh plan ${{env.environment}}
                 cd $GITHUB_WORKSPACE/infrastructure/s3
                 echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                 ./ter.sh init ${{env.environment}} && ./ter.sh plan ${{env.environment}}

    manual-approval:
      name: manual approval
      runs-on: ubuntu-latest
      needs: terraform-plan
      if: success()

      permissions:
        issues: write
        contents: read

      steps: 
        - name: Await for manual approval
          uses: trstringer/manual-approval@v1
          with:
            secret: ${{ github.TOKEN }}
            approvers: username1, username2 #add the usernames of the users who can approve the deployment
            minimum-approvals: 1 #specify the number of approvals needed
            issue-title: "Deploying ${{ github.ref_name }} to prod from staging"
            issue-body: "Please approve or deny the deployment."
            exclude-workflow-initiator-as-approver: false

    terraform-apply:
      name: plan action to be execute
      runs-on: ubuntu-latest
      needs: manual-approval
      permissions:
        id-token: write
        contents: read
      steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: #specify terraform version if needed
      - name: Run approval script
        run: echo "Hey, you approved it"
