name: Infra pre-deploy

on:
    push:
        branches:
            - main
            - feature*
    pull_request:
    workflow_dispatch:

env:
  AWS_REGION: "ap-south-1"
  ENVIRONMENT: "development"

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: read   # This is required for actions/checkout

jobs: 
    terraform-init:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.5
            
            - name: configure aws auth
              uses: aws-actions/configure-aws-credentials@v4.0.3
              with:
                role-to-assume: arn:aws:iam::288761748973:role/github_oidc_role-dev
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_REGION }}

            - name: Initialize Terraform
              env:
                environment: development
              run: |
                cd $GITHUB_WORKSPACE/infrastructure/lambda
                echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                ./ter.sh init ${{env.environment}}
                cd $GITHUB_WORKSPACE/infrastructure/s3
                echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                ./ter.sh init ${{env.environment}}

    terraform-plan:
        needs: terraform-init
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.5
            
            - name: configure aws auth
              uses: aws-actions/configure-aws-credentials@v4.0.3
              with:
                role-to-assume: arn:aws:iam::288761748973:role/github_oidc_role-dev
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_REGION }}

            - name: Initiating terraform plan
              env:
                environment: development
              run: |
                 cd $GITHUB_WORKSPACE/infrastructure/lambda
                 echo -e "\033[0;32mRunning terraform plan in: $(basename $(pwd))\033[0m"
                 ./ter.sh init ${{env.environment}} && ./ter.sh plan ${{env.environment}}
                 cd $GITHUB_WORKSPACE/infrastructure/s3
                 echo -e "\033[0;32mRunning terraform init in: $(basename $(pwd))\033[0m"
                 ./ter.sh init ${{env.environment}} && ./ter.sh plan ${{env.environment}}

    terraform-apply:
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch' ) && github.event.ref == 'refs/heads/feature2'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.10.5
                
            - name: configure aws auth
              uses: aws-actions/configure-aws-credentials@v4.0.3
              with:
                role-to-assume: arn:aws:iam::288761748973:role/github_oidc_role-dev
                role-session-name: GitHub_to_AWS_via_FederatedOIDC
                aws-region: ${{ env.AWS_REGION }}
  
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.12'

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r service/requirements.txt -t service/python/

            - name: Initiating terraform apply
              env:
                environment: development
              run: |
                cd $GITHUB_WORKSPACE/infrastructure/lambda &&
                ./ter.sh init ${{env.environment}} 
                ./ter.sh apply ${{env.environment}}
            - name: Initiating terraform apply
              env:
                environment: development
              run: |
                cd $GITHUB_WORKSPACE/infrastructure/s3 &&
                ./ter.sh init ${{env.environment}} 
                ./ter.sh apply ${{env.environment}}
